import { ILUBWData, ILUBWMeasurandData } from "shared";

/**
 * Service for querying the LUBW API.
 */
export class LUBWQueryService {
  /**
   * Queries the LUBW API with the given annotations.
   * @param annotations the qanary annotations generated by components
   * @returns the data queried from the LUBW API
   */
  public static async queryLUBWAPI(lubwData: ILUBWData): Promise<ILUBWMeasurandData> {
    const apiURL = this.getLUBWAPIURL(lubwData);
    console.log("Querying LUBW API with URL: " + apiURL);

    // TODO: add error handling
    // TODO: add logic for different calculation types
    try {
      const response = await fetch(apiURL);
      const measurandData = await response.json();

      return {
        measurandData,
        ...lubwData,
      };
    } catch (error) {
      console.error(error);
      throw error;
    }
  }

  /**
   * Transforms the annotations to a valid LUBW API URL.
   * @param annotations the qanary annotations generated by components
   * @returns the constructed LUBW API URL
   */
  private static getLUBWAPIURL(lubwData: ILUBWData): string {
    return `https://lupo-cloud.de/air/metric/kit.iai.test.${lubwData.measurand}?from=${lubwData.time}-ago&labels=station:${lubwData.station}`;
  }
}
